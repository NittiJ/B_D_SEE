library(arrow)
library(dplyr)
library(fs)
library(readxl)
library(RODBC)
library(stringr)

# --- Paths ---
bdc_path <- "C:/BDC/"
final_data_parquet <- file.path(bdc_path, "Final_Data_Full.parquet")
bdc_parquet <- file.path(bdc_path, "BDC_Data.parquet")
blank_shell <- file.path(bdc_path, "blank_.accdb")
access_target <- file.path(bdc_path, paste0("BDC_", Sys.Date(), ".accdb"))

# --- Load Arrow Datasets & Normalize Join Types ---
BDC_arrow <- open_dataset(bdc_parquet) %>%
  mutate(PROV_MSTR_LOC_ID = cast(PROV_MSTR_LOC_ID, string()))

Final_arrow <- open_dataset(final_data_parquet) %>%
  mutate(PROV_MSTR_LOC_ID = cast(PROV_MSTR_LOC_ID, string()))

# --- Match BPD Providers ---
Matched_BDC_arrow <- BDC_arrow %>%
  filter(Designation_TYPE %in% c("BDC", "BDC+", "CC")) %>%
  inner_join(Final_arrow, by = "PROV_MSTR_LOC_ID")

Matched_BDC <- collect(Matched_BDC_arrow)

# --- Format Final Output ---
BDC_Final <- Matched_BDC %>%
  filter(!is.na(Bdc_Program_DESCRIPTION)) %>%
  mutate(
    PROVIDER_NAME = ORG_NAME,
    NTWK = "",
    PROVTYPE = "",
    TAXONOMY = TXNMY_CD,
    RowId = row_number(),
    Latitude = NA_character_,
    Longitude = NA_character_,
    GeoInfo = NA_character_,
    StandardZip = NA_character_,
    StandardStat = NA_character_,
    CountySSA = NA_character_
  ) %>%
  distinct(PROV_ADDR_LINE_1, Bdc_Program_DESCRIPTION, .keep_all = TRUE) %>%
  transmute(
    NTWK,
    PROVTYPE,
    NPI = PROV_NPI,
    PROVIDER_NAME,
    ADDRESS = PROV_ADDR_LINE_1,
    CITY = PROV_ADRS_CITY,
    STATE = PROV_ADRS_ST,
    ZIP_5 = PROV_ADRS_ZIP_CD,
    TAXONOMY,
    RowId,
    Latitude,
    Longitude,
    GeoInfo,
    StandardZip,
    StandardStat,
    CountySSA,
    Bdc_Program_DESCRIPTION,
    RECOGNTN_ENTITY_CD,
    Recogntn_Value_CD,
    Designation_TYPE
  )

# --- Export to Access in Chunks ---
file_copy(blank_shell, access_target, overwrite = TRUE)

conn <- odbcDriverConnect(paste0("Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=", access_target))

chunk_size <- 10000
n <- nrow(BDC_Final)

for (start in seq(1, n, by = chunk_size)) {
  end <- min(start + chunk_size - 1, n)
  chunk <- BDC_Final[start:end, ]
  sqlSave(conn, chunk, tablename = "NTWK", rownames = FALSE, append = (start != 1), safer = TRUE)
}

odbcClose(conn)
message("Export complete: ", access_target)
